{"ast":null,"code":"var _jsxFileName = \"E:\\\\Belajar Pemrograman\\\\Project Node JS\\\\JSON Web Token Authentication\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expired, setExpired] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    refreshToken();\n  }, [1000]);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\"); // set token ke state\n\n      setToken(response.data.accessToken); // decoded token\n\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpired(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        // redirect ke halaman login\n        navigate(\"/\");\n      }\n    }\n  }; // instance axios\n\n\n  const axiosJWT = axios.create(); // set axios interceptor yang berfungsi untuk melakukan pengecekan sebelum request\n\n  axiosJWT.interceptors.request.use(async config => {\n    // get cuurent date\n    const currentDate = new Date(); // membandingkan currentdate dengan expire token\n\n    if (expired * 1000 < currentDate.getTime()) {\n      const response = await axios.get(\"http://localhost:5000/token\"); // update header\n\n      config.headers.Authorization = `Bearer ${response.data.accessToken}`; // set token ke state\n\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpired(decoded.exp);\n    }\n\n    return config;\n  }, error => {\n    // reject promise\n    return Promise.reject(error);\n  });\n\n  const getUsers = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      // send token\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setUsers(response.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome Back: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button is-info\",\n      onClick: getUsers,\n      children: \"Get Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-striped is-fullwidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"xFCQdJ8ZCXc6YTDaSBLJjhmGVsg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jwt_decode","useNavigate","Dashboard","name","setName","token","setToken","expired","setExpired","users","setUsers","navigate","refreshToken","response","get","data","accessToken","decoded","exp","error","axiosJWT","create","interceptors","request","use","config","currentDate","Date","getTime","headers","Authorization","Promise","reject","getUsers","map","user","index","email","id"],"sources":["E:/Belajar Pemrograman/Project Node JS/JSON Web Token Authentication/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [expired, setExpired] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    refreshToken();\r\n  }, [1000]);\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/token\");\r\n      // set token ke state\r\n      setToken(response.data.accessToken);\r\n      // decoded token\r\n      const decoded = jwt_decode(response.data.accessToken);\r\n      setName(decoded.name);\r\n      setExpired(decoded.exp);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // redirect ke halaman login\r\n        navigate(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // instance axios\r\n  const axiosJWT = axios.create();\r\n\r\n  // set axios interceptor yang berfungsi untuk melakukan pengecekan sebelum request\r\n  axiosJWT.interceptors.request.use(\r\n    async (config) => {\r\n      // get cuurent date\r\n      const currentDate = new Date();\r\n      // membandingkan currentdate dengan expire token\r\n      if (expired * 1000 < currentDate.getTime()) {\r\n        const response = await axios.get(\"http://localhost:5000/token\");\r\n        // update header\r\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n        // set token ke state\r\n        setToken(response.data.accessToken);\r\n        const decoded = jwt_decode(response.data.accessToken);\r\n        setName(decoded.name);\r\n        setExpired(decoded.exp);\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      // reject promise\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const getUsers = async () => {\r\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\r\n      // send token\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    setUsers(response.data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Welcome Back: {name}</h1>\r\n      <button className=\"button is-info\" onClick={getUsers}>\r\n        Get Users\r\n      </button>\r\n      <table className=\"table is-striped is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>No</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user, index) => (\r\n            <tr key={user.id}>\r\n              <td>{index + 1}</td>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}